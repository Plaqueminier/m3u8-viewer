import globals from "globals";
import tseslint from "typescript-eslint";

export default [
  {
    files: ["src/**/*.ts", "scripts/**/*.ts"],
    languageOptions: { sourceType: "commonjs" },
  },
  { languageOptions: { globals: globals.browser } },
  ...tseslint.configs.recommended,
  {
    rules: {
      "no-console": "error",
      "@typescript-eslint/no-unused-vars": [
        "error",
        {
          argsIgnorePattern: "^_",
          varsIgnorePattern: "^_",
        },
      ],
      eqeqeq: "error",
      curly: "error",
      "brace-style": ["error", "1tbs"],
      camelcase: "error",
      indent: ["error", 2],
      "linebreak-style": ["error", "unix"],
      quotes: ["error", "double"],
      semi: ["error", "always"],
      "no-trailing-spaces": "error",
      "eol-last": ["error", "always"],
      "no-multiple-empty-lines": ["error", { max: 1 }],
      "space-before-blocks": "error",
      "keyword-spacing": ["error", { before: true, after: true }],
      "space-infix-ops": "error",
      "spaced-comment": ["error", "always", { exceptions: ["-"] }],
      "default-case": "error",
      "dot-notation": ["error", { allowKeywords: true }],
      "func-names": ["error", "always"],
      "no-implicit-globals": "error",
      "no-invalid-this": "error",
      "no-lonely-if": "error",
      "no-multi-spaces": "error",
      "no-param-reassign": "error",
      "no-return-assign": ["error", "always"],
      "no-unused-expressions": ["error", { allowTernary: true }],
      "no-use-before-define": ["error", { functions: false, classes: true }],
      "prefer-const": "error",
      "require-await": "error",
      strict: ["error", "global"],
      yoda: ["error", "never"],
      "no-else-return": ["error", { allowElseIf: false }],
      "no-useless-return": "error",
      "consistent-this": ["error", "self"],
      "max-depth": ["error", 4],
      "no-alert": "error",
      "no-array-constructor": "error",
      "no-bitwise": "error",
      "no-caller": "error",
      "no-case-declarations": "error",
      "no-extend-native": "error",
      "no-extra-bind": "error",
      "no-extra-label": "error",
      "no-floating-decimal": "error",
      "no-implied-eval": "error",
      "no-iterator": "error",
      "no-label-var": "error",
      "no-labels": ["error", { allowLoop: false, allowSwitch: false }],
      "no-lone-blocks": "error",
      "no-loop-func": "error",
      "no-new-func": "error",
      "no-new-object": "error",
      "no-new-wrappers": "error",
      "no-octal-escape": "error",
      "no-proto": "error",
      "no-redeclare": "error",
      "no-restricted-syntax": ["error", "WithStatement"],
      "no-script-url": "error",
      "no-sequences": "error",
      "no-shadow-restricted-names": "error",
      "no-throw-literal": "error",
      "no-undef-init": "error",
      "no-unmodified-loop-condition": "error",
      "no-unneeded-ternary": ["error", { defaultAssignment: false }],
      "no-useless-call": "error",
      "no-useless-computed-key": "error",
      "no-useless-concat": "error",
      "no-void": "error",
      "no-warning-comments": [
        "error",
        { terms: ["todo", "fixme"], location: "start" },
      ],
      "wrap-iife": ["error", "inside"],
      "no-var": "error",
      "prefer-arrow-callback": [
        "error",
        { allowNamedFunctions: false, allowUnboundThis: true },
      ],
      "prefer-rest-params": "error",
      "prefer-spread": "error",
      "object-shorthand": ["error", "always"],
      "arrow-spacing": ["error", { before: true, after: true }],
      "block-scoped-var": "error",
      "callback-return": ["error", ["callback", "cb", "next"]],
      "comma-style": ["error", "last"],
      "no-duplicate-imports": "error",
      "no-new": "error",
      "no-path-concat": "error",
      "no-restricted-modules": ["error", "fs", "cluster"],
      "@typescript-eslint/explicit-function-return-type": ["error"],
    },
    extends: ["prettier"],
  },
];
